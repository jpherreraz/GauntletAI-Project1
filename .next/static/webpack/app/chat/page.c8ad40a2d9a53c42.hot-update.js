"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/chat/page",{

/***/ "(app-pages-browser)/./src/services/messageService.ts":
/*!****************************************!*\
  !*** ./src/services/messageService.ts ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETED_USER_ID: () => (/* binding */ DELETED_USER_ID),\n/* harmony export */   messageService: () => (/* binding */ messageService)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/client-dynamodb */ \"(app-pages-browser)/./node_modules/@aws-sdk/client-dynamodb/dist-es/DynamoDBClient.js\");\n/* harmony import */ var _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/client-dynamodb */ \"(app-pages-browser)/./node_modules/@aws-sdk/client-dynamodb/dist-es/commands/PutItemCommand.js\");\n/* harmony import */ var _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/client-dynamodb */ \"(app-pages-browser)/./node_modules/@aws-sdk/client-dynamodb/dist-es/commands/QueryCommand.js\");\n/* harmony import */ var _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-sdk/client-dynamodb */ \"(app-pages-browser)/./node_modules/@aws-sdk/client-dynamodb/dist-es/commands/ScanCommand.js\");\n/* harmony import */ var _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aws-sdk/client-dynamodb */ \"(app-pages-browser)/./node_modules/@aws-sdk/client-dynamodb/dist-es/commands/UpdateItemCommand.js\");\n/* harmony import */ var _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aws-sdk/client-dynamodb */ \"(app-pages-browser)/./node_modules/@aws-sdk/client-dynamodb/dist-es/commands/DeleteItemCommand.js\");\n/* harmony import */ var _aws_sdk_util_dynamodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/util-dynamodb */ \"(app-pages-browser)/./node_modules/@aws-sdk/util-dynamodb/dist-es/index.js\");\n\n\nconst dynamoClient = new _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_1__.DynamoDBClient({\n    region: 'us-east-2',\n    credentials: {\n        accessKeyId: 'AKIAW5BDQ6ZZ3EIKJYUI',\n        secretAccessKey: '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'\n    }\n});\nconst DELETED_USER_ID = 'deleted_user';\nconst messageService = {\n    async sendMessage (message) {\n        const timestamp = Date.now();\n        const id = \"\".concat(timestamp, \"-\").concat(Math.random().toString(36).substr(2, 9));\n        const params = {\n            TableName: 'Messages',\n            Item: (0,_aws_sdk_util_dynamodb__WEBPACK_IMPORTED_MODULE_0__.marshall)({\n                id,\n                channelId: message.channelId,\n                userId: message.userId,\n                text: message.text,\n                timestamp,\n                username: message.username,\n                replyToId: message.replyToId || null,\n                reactions: {}\n            })\n        };\n        try {\n            await dynamoClient.send(new _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_2__.PutItemCommand(params));\n            console.log('Message sent to DynamoDB:', {\n                id,\n                timestamp\n            });\n            return {\n                id,\n                timestamp\n            };\n        } catch (error) {\n            console.error('Error sending message to DynamoDB:', error);\n            throw error;\n        }\n    },\n    async getMessages (channelId) {\n        const params = {\n            TableName: 'Messages',\n            KeyConditionExpression: 'channelId = :channelId',\n            ExpressionAttributeValues: (0,_aws_sdk_util_dynamodb__WEBPACK_IMPORTED_MODULE_0__.marshall)({\n                ':channelId': channelId\n            }),\n            ScanIndexForward: true // ascending order\n        };\n        try {\n            const { Items = [] } = await dynamoClient.send(new _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_3__.QueryCommand(params));\n            const messages = Items.map((item)=>{\n                const unmarshalled = (0,_aws_sdk_util_dynamodb__WEBPACK_IMPORTED_MODULE_0__.unmarshall)(item);\n                // Ensure reactions is always an object\n                if (!unmarshalled.reactions) {\n                    unmarshalled.reactions = {};\n                }\n                // Ensure replyToId is properly handled\n                if (unmarshalled.replyToId === null) {\n                    delete unmarshalled.replyToId;\n                }\n                return unmarshalled;\n            });\n            console.log('Retrieved messages:', messages.length);\n            return messages;\n        } catch (error) {\n            console.error('Error getting messages from DynamoDB:', error);\n            throw error;\n        }\n    },\n    async toggleReaction (param) {\n        let { messageId, emoji, userId, username } = param;\n        try {\n            console.log('Toggling reaction:', {\n                messageId,\n                emoji,\n                userId\n            });\n            const scanParams = {\n                TableName: 'Messages',\n                FilterExpression: 'id = :messageId',\n                ExpressionAttributeValues: (0,_aws_sdk_util_dynamodb__WEBPACK_IMPORTED_MODULE_0__.marshall)({\n                    ':messageId': messageId\n                })\n            };\n            const { Items = [] } = await dynamoClient.send(new _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_4__.ScanCommand(scanParams));\n            if (!Items.length) throw new Error('Message not found');\n            const message = (0,_aws_sdk_util_dynamodb__WEBPACK_IMPORTED_MODULE_0__.unmarshall)(Items[0]);\n            const reactions = message.reactions || {};\n            const users = reactions[emoji] || [];\n            const hasReacted = users.includes(userId);\n            const updateParams = {\n                TableName: 'Messages',\n                Key: (0,_aws_sdk_util_dynamodb__WEBPACK_IMPORTED_MODULE_0__.marshall)({\n                    channelId: message.channelId,\n                    timestamp: message.timestamp\n                })\n            };\n            if (!message.reactions) {\n                updateParams.UpdateExpression = 'SET reactions = :reactions';\n                updateParams.ExpressionAttributeValues = (0,_aws_sdk_util_dynamodb__WEBPACK_IMPORTED_MODULE_0__.marshall)({\n                    ':reactions': {\n                        [emoji]: [\n                            userId\n                        ]\n                    }\n                });\n            } else if (hasReacted) {\n                if (users.length === 1) {\n                    updateParams.UpdateExpression = 'REMOVE reactions.#e';\n                    updateParams.ExpressionAttributeNames = {\n                        '#e': emoji\n                    };\n                } else {\n                    updateParams.UpdateExpression = 'SET reactions.#e = :users';\n                    updateParams.ExpressionAttributeNames = {\n                        '#e': emoji\n                    };\n                    updateParams.ExpressionAttributeValues = (0,_aws_sdk_util_dynamodb__WEBPACK_IMPORTED_MODULE_0__.marshall)({\n                        ':users': users.filter((id)=>id !== userId)\n                    });\n                }\n            } else {\n                updateParams.UpdateExpression = 'SET reactions.#e = :users';\n                updateParams.ExpressionAttributeNames = {\n                    '#e': emoji\n                };\n                updateParams.ExpressionAttributeValues = (0,_aws_sdk_util_dynamodb__WEBPACK_IMPORTED_MODULE_0__.marshall)({\n                    ':users': [\n                        ...users,\n                        userId\n                    ]\n                });\n            }\n            await dynamoClient.send(new _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_5__.UpdateItemCommand(updateParams));\n            return true;\n        } catch (error) {\n            console.error('Error toggling reaction:', error);\n            throw error;\n        }\n    },\n    async getMessage (messageId) {\n        const params = {\n            TableName: 'Messages',\n            FilterExpression: 'id = :messageId',\n            ExpressionAttributeValues: (0,_aws_sdk_util_dynamodb__WEBPACK_IMPORTED_MODULE_0__.marshall)({\n                ':messageId': messageId\n            })\n        };\n        const { Items = [] } = await dynamoClient.send(new _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_4__.ScanCommand(params));\n        if (!Items.length) return null;\n        const message = (0,_aws_sdk_util_dynamodb__WEBPACK_IMPORTED_MODULE_0__.unmarshall)(Items[0]);\n        return message;\n    },\n    async clearMessages () {\n        try {\n            const params = {\n                TableName: 'Messages'\n            };\n            const { Items = [] } = await dynamoClient.send(new _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_4__.ScanCommand(params));\n            for (const item of Items){\n                const deleteParams = {\n                    TableName: 'Messages',\n                    Key: (0,_aws_sdk_util_dynamodb__WEBPACK_IMPORTED_MODULE_0__.marshall)({\n                        channelId: (0,_aws_sdk_util_dynamodb__WEBPACK_IMPORTED_MODULE_0__.unmarshall)(item).channelId,\n                        timestamp: (0,_aws_sdk_util_dynamodb__WEBPACK_IMPORTED_MODULE_0__.unmarshall)(item).timestamp\n                    })\n                };\n                await dynamoClient.send(new _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_6__.DeleteItemCommand(deleteParams));\n            }\n            console.log('Cleared all messages');\n            return true;\n        } catch (error) {\n            console.error('Error clearing messages:', error);\n            throw error;\n        }\n    },\n    async reassignMessagesToDeletedUser (userId) {\n        try {\n            // Get all messages from this user\n            const params = {\n                TableName: 'Messages',\n                FilterExpression: 'userId = :userId',\n                ExpressionAttributeValues: (0,_aws_sdk_util_dynamodb__WEBPACK_IMPORTED_MODULE_0__.marshall)({\n                    ':userId': userId\n                })\n            };\n            const { Items = [] } = await dynamoClient.send(new _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_4__.ScanCommand(params));\n            // Get message IDs for filtering replies later\n            const messageIds = Items.map((item)=>(0,_aws_sdk_util_dynamodb__WEBPACK_IMPORTED_MODULE_0__.unmarshall)(item).id);\n            // Update each message to use the deleted user ID\n            for (const item of Items){\n                const message = (0,_aws_sdk_util_dynamodb__WEBPACK_IMPORTED_MODULE_0__.unmarshall)(item);\n                const updateParams = {\n                    TableName: 'Messages',\n                    Key: (0,_aws_sdk_util_dynamodb__WEBPACK_IMPORTED_MODULE_0__.marshall)({\n                        channelId: message.channelId,\n                        timestamp: message.timestamp\n                    }),\n                    UpdateExpression: 'SET userId = :deletedId, username = :deletedName',\n                    ExpressionAttributeValues: (0,_aws_sdk_util_dynamodb__WEBPACK_IMPORTED_MODULE_0__.marshall)({\n                        ':deletedId': DELETED_USER_ID,\n                        ':deletedName': 'Deleted User'\n                    }),\n                    ReturnValues: 'ALL_NEW'\n                };\n                await dynamoClient.send(new _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_5__.UpdateItemCommand(updateParams));\n            }\n            // Find replies using multiple scans if needed\n            for (const messageId of messageIds){\n                const replyParams = {\n                    TableName: 'Messages',\n                    FilterExpression: 'replyToId = :messageId',\n                    ExpressionAttributeValues: (0,_aws_sdk_util_dynamodb__WEBPACK_IMPORTED_MODULE_0__.marshall)({\n                        ':messageId': messageId\n                    })\n                };\n                const { Items: ReplyItems = [] } = await dynamoClient.send(new _aws_sdk_client_dynamodb__WEBPACK_IMPORTED_MODULE_4__.ScanCommand(replyParams));\n                // No need to update replies, just keeping them for reference\n                console.log(\"Found \".concat(ReplyItems.length, \" replies to message \").concat(messageId));\n            }\n            return true;\n        } catch (error) {\n            console.error('Error reassigning messages:', error);\n            return false;\n        }\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/messageService.ts\n"));

/***/ })

});